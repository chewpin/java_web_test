

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Date;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebInitParam;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.TreeSet;
import java.util.Vector;
import java.sql.PreparedStatement;

/**
 * Servlet implementation class LoginServlet
 */
//@WebServlet("/LoginServlet")
@WebServlet(
        description = "Login Servlet", 
        urlPatterns = { "/LoginServlet" }, 
        initParams = { 
                @WebInitParam(name = "user", value = "jessica"), 
                @WebInitParam(name = "password", value = "chen")
        })
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	public static final String HTML_START="<html><body>";
    public static final String HTML_END="</body></html>";
    
    public void init() throws ServletException {
        //we can create DB connection resource here and set it to Servlet context
        if(getServletContext().getInitParameter("dbURL").equals("jdbc:mysql://localhost/mysql_db") &&
                getServletContext().getInitParameter("dbUser").equals("mysql_user") &&
                getServletContext().getInitParameter("dbUserPwd").equals("mysql_pwd"))
        getServletContext().setAttribute("DB_Success", "True");
        else throw new ServletException("DB Connection error");
    }
    
    /**
     * @see HttpServlet#HttpServlet()
     */
    public LoginServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
//		 PrintWriter out = response.getWriter();
//	     Date date = new Date();
//	     out.println(HTML_START + "<h2>Hi There!</h2><br/><h3>Date="+date +"</h3>"+HTML_END);
	   
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
//	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
//		// TODO Auto-generated method stub
//	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		if(request.getParameter("view_url")!=null) {
	        //get request parameters for userID and password
	        String url_1 = request.getParameter("view_url");
			String url = HTML_START + "<h2>Hi There!</h2><br/><h3>Date="+url_1 +"</h3>"+HTML_END;
			String date_time = request.getParameter("view_date_time");
	         
	        //logging example
	        log("url="+url+"::date_time="+date_time);
	        
	        request.setAttribute("url", url);
	        request.setAttribute("date_time", date_time);
	        //Servlet JSP communication
			RequestDispatcher reqDispatcher = getServletConfig().getServletContext().getRequestDispatcher("/jsps/hello.jsp");
			reqDispatcher.forward(request,response);
	        
	         
	        RequestDispatcher rd = getServletContext().getRequestDispatcher("/login.html");
	        PrintWriter out= response.getWriter();
	        out.println("<font color=red> url: " + url + ", date_time: " + date_time + ".</font>");
	        rd.include(request, response);
	           
		}
         
    }
	public void get_page(String url, String date_time) throws SQLException {
		String date[] = date_time.split("/");
		Integer month = Integer.parseInt(date[0]);
		Integer day = Integer.parseInt(date[1]);
		Integer year = Integer.parseInt(date[2]);
		log("month="+month+"::day="+day);
		Statement stmt = oracleConnection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
	    ResultSet rst = stmt.executeQuery("select count(e.event_city), c.city_id as count from " + cityTableName + " c, " + eventTableName + " e where c.city_id = e.event_city group by c.city_id order by count desc" );
	    
	    java.sql.PreparedStatement ps1 = oracleConnection.prepareStatement("select count(*) from " + eventTableName + " e where e.event_city_id = ?");
	    
	    String city;
	    
	    while (rst.next()){
	        
	        int temp = rst.getInt(1);
	        if (rst.isFirst()){
	            max = temp;
	        }
	        
	        if (temp < max){
	            break; // no longer tie
	        }
	        
	        Statement stmt2 = oracleConnection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
	                                                           ResultSet.CONCUR_READ_ONLY);
	        
	        int cid = rst.getInt(1);
	        
	        ResultSet rst2 = stmt2.executeQuery("select city_name from " + cityTableName + " where city_id = " + cid);
	        rst2.next();
	        String cname = rst2.getString(1);
	        
	        this.popularCityNames.add(cname);
	        
	        rst2.close();
	        stmt2.close();
	        
	    }

		
	}

}
